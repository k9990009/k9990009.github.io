<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JUST DO IT</title>
  
  <subtitle>Done is better than perfect.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-08T07:57:16.860Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>k9990009</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>let&#39;s encrypt免费SSL证书申请</title>
    <link href="http://yoursite.com/2019/03/08/let-s-encrypt%E5%85%8D%E8%B4%B9SSL%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
    <id>http://yoursite.com/2019/03/08/let-s-encrypt免费SSL证书申请/</id>
    <published>2019-03-08T05:22:52.000Z</published>
    <updated>2019-03-08T07:57:16.860Z</updated>
    
    <content type="html"><![CDATA[<p>  首先简单的介绍下let’s encrypt，<a href="https://letsencrypt.org/" target="_blank" rel="noopener">官网</a>是这么介绍的:<br>Let’s Encrypt is a free, automated, and open certificate authority brought to you by the non-profit Internet Security Research Group (ISRG).<br>Let’s Encrypt 是一个由非营利性组织 互联网安全研究小组（ISRG）提供的免费、自动化和开放的证书颁发机构（CA）。<br>  简单来说就是有了let’s encrypt的证书，网站就可以启用https啦。可以防运营商劫持、搜索引擎增加权重、微信公众号开发要求http。以我测试域名<a href="https://trynext.top" target="_blank" rel="noopener">trynext.top</a>为例，讲下let’s encrypt免费SSL证书申请过程。<br><strong><em>准备工作</em></strong><br>  这个项目是python开发的，需要python 2.7环境，linux自带的。还需要安装git，不多说。<br><strong><em>配置流程</em></strong><br>  申请证书时，需要80端口，避免nginx一类的服务占用端口，请暂时关闭它。不然会有如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Problem binding to port 80: Could not <span class="built_in">bind</span> to IPv4 or IPv6.</span><br></pre></td></tr></table></figure><p>  回归正文，执行以下命令申请证书，按照提示走。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/letsencrypt/letsencrypt</span><br><span class="line"><span class="built_in">cd</span> letsencrypt</span><br><span class="line">./certbot-auto --<span class="built_in">help</span> all</span><br><span class="line">./certbot-auto certonly --standalone --email 1509596944@qq.com -d trynext.top -d www.trynext.top</span><br></pre></td></tr></table></figure></p><p>这样就申请成功啦！</p><p><img src="https://ws1.sinaimg.cn/large/006AnDiZgy1g0v6jqzn1nj30m00e4q3z.jpg" alt="avatar"></p><p>在/etc/letsencrypt/live/trynext.top下生成了4个证书，README中有写证书的作用。</p><p><img src="https://ws1.sinaimg.cn/large/006AnDiZgy1g0v6rlzpivj30oy0azq3t.jpg" alt="avatar"></p><p>现在只需要在nginx中配置fullchain.pem  privkey.pem这两个证书就好了，加上红框部分。</p><p><img src="https://ws1.sinaimg.cn/large/006AnDiZgy1g0vd9lohsrj30x10jeabe.jpg" alt="avatar"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/letsencrypt/live/trynext.top/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/trynext.top/privkey.pem;</span><br></pre></td></tr></table></figure></p><p>这样就可以使用https访问啦。nginx中加上如下配置，可以强制http跳转到https。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$scheme</span> = http ) &#123;</span><br><span class="line"><span class="built_in">return</span> 301 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$server_port</span> = 80 ) &#123;</span><br><span class="line"><span class="built_in">return</span> 301 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">error_page 497 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br></pre></td></tr></table></figure></p><p><strong><em>这个签证只有90天的有效期，需要续签</em></strong><br>设置个定时任务去自动更新它，先写个脚本renew-cert.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#关闭nginx</span></span><br><span class="line">nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment">#续签 </span></span><br><span class="line">/letsencrypt/certbot-auto renew <span class="comment">#30天以内才会更新</span></span><br><span class="line"><span class="comment">#/letsencrypt/certbot-auto renew --force-renew  #强制更新 不推荐</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动nginx</span></span><br><span class="line">nginx</span><br></pre></td></tr></table></figure></p><p>添加执行权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 renew-cert.sh</span><br></pre></td></tr></table></figure></p><p>设置定时任务，每天凌晨2点更新一次<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* 2 * * * /taskShell/renew-cert.sh &gt; /taskShell/crontab.log  2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>有什么细节没提到的，请留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  首先简单的介绍下let’s encrypt，&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;是这么介绍的:&lt;br&gt;Let’s Encrypt is a free, autom
      
    
    </summary>
    
      <category term="let&#39;s encrypt" scheme="http://yoursite.com/categories/let-s-encrypt/"/>
    
    
      <category term="let&#39;s encrypt" scheme="http://yoursite.com/tags/let-s-encrypt/"/>
    
      <category term="https" scheme="http://yoursite.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建免费个人博客</title>
    <link href="http://yoursite.com/2018/08/08/hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/08/08/hexo-github搭建免费个人博客/</id>
    <published>2018-08-08T02:35:01.000Z</published>
    <updated>2019-03-08T08:00:47.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有次看到个开源的播放器，去该作者的博客瞧了下，发现很酷，用的是hexo搭建的，比wordpress轻量，不用安装mysql，可以托管在GitHub上,不用管理服务器，更重要的还是免费的。做开发这么久了，还没总结过，容易忘记，正好搭建自己的个人博客记录下。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>环境：windows<br>搭建过程参考：<br><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a><br><a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">hexo从零开始到搭建完整</a></p><h2 id="安装Git-Bash"><a href="#安装Git-Bash" class="headerlink" title="安装Git Bash"></a>安装Git Bash</h2><p>下载后，修改安装目录一直next就好了。打开gitbash，输入命令： <strong>git version</strong>，显示版本号即安装成功.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version 2.18.0.windows.1</span><br></pre></td></tr></table></figure><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git Bash下载</a></p><h2 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h2><p>同样的下载后，修改安装目录一直next就好了。打开cmd命令行窗口，输入命令： <strong>node -v</strong>，显示版本号即安装成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v8.11.3</span><br></pre></td></tr></table></figure><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">NodeJs下载</a>（说明：LTS为长期支持版，Current为当前最新版，建议安装LTS版本）</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>在Git Bash依次执行以下命令安装</p><h6 id="安装hexo-1"><a href="#安装hexo-1" class="headerlink" title="安装hexo"></a>安装hexo</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h6 id="切换到你想放博客的路径"><a href="#切换到你想放博客的路径" class="headerlink" title="切换到你想放博客的路径"></a>切换到你想放博客的路径</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:</span><br></pre></td></tr></table></figure><h6 id="在当前目录下生成初始化创建博客目录-blog-，即我的博客会放在本地D-blog"><a href="#在当前目录下生成初始化创建博客目录-blog-，即我的博客会放在本地D-blog" class="headerlink" title="在当前目录下生成初始化创建博客目录/blog/，即我的博客会放在本地D:\blog"></a>在当前目录下生成初始化创建博客目录/blog/，即我的博客会放在本地D:\blog</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>初始化得到以下目录</p><ul><li>node_modules：是依赖包</li><li>public：存放的是生成的页面</li><li>scaffolds：命令生成文章等的模板</li><li>source：用命令创建的各种文章</li><li>themes：主题</li><li>_config.yml：整个博客的配置</li><li>db.json：source解析所得到的</li><li>package.json：项目所需模块项目的配置信息</li></ul><h6 id="进入下一级目录-blog"><a href="#进入下一级目录-blog" class="headerlink" title="进入下一级目录 blog"></a>进入下一级目录 blog</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><h6 id="安装hexo的扩展插件"><a href="#安装hexo的扩展插件" class="headerlink" title="安装hexo的扩展插件"></a>安装hexo的扩展插件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h6 id="安装其它插件-按需安装"><a href="#安装其它插件-按需安装" class="headerlink" title="安装其它插件(按需安装)"></a>安装其它插件(按需安装)</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save  </span><br><span class="line">npm install hexo-admin --save  </span><br><span class="line">npm install hexo-generator-archive --save  </span><br><span class="line">npm install hexo-generator-feed --save  </span><br><span class="line">npm install hexo-generator-search --save  </span><br><span class="line">npm install hexo-generator-tag --save  </span><br><span class="line">npm install hexo-deployer-git --save  </span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>查看hexo版本命令：<strong>hexo -v</strong></p><h2 id="配置ssh并添加至GitHub"><a href="#配置ssh并添加至GitHub" class="headerlink" title="配置ssh并添加至GitHub"></a>配置ssh并添加至GitHub</h2><p><a href="https://github.com/" target="_blank" rel="noopener">github账号注册</a><br>创建repository，名称为：<strong>用户名.github.io</strong><br>在git bash中配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>继续执行下面命令，生成密钥.生成的密钥一般在C:\Users\你的电脑用户名.ssh\下，将id_rsa.pub中的密钥添加至github（用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>执行命令验证密钥：<strong>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></strong></p><h2 id="hexo命令-缩写"><a href="#hexo命令-缩写" class="headerlink" title="hexo命令/缩写"></a>hexo命令/缩写</h2><p>常用命令如下，更多详细用法参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官网文档</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">hexo g  <span class="comment">#hexo generate</span></span><br><span class="line"><span class="comment"># 启动本地服务  访问http://localhost:4000/可进行本地调试</span></span><br><span class="line">hexo s <span class="comment">#hexo server</span></span><br><span class="line"><span class="comment"># 部署博客</span></span><br><span class="line">hexo d <span class="comment">#hexo deploy</span></span><br><span class="line"><span class="comment"># 组合命令 生成、部署</span></span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="将hexo部署至GitHub"><a href="#将hexo部署至GitHub" class="headerlink" title="将hexo部署至GitHub"></a>将hexo部署至GitHub</h2><h5 id="修改配置文件D-blog-config-yml-没用过-yml文件的可以了解下"><a href="#修改配置文件D-blog-config-yml-没用过-yml文件的可以了解下" class="headerlink" title="修改配置文件D:\blog_config.yml,没用过.yml文件的可以了解下"></a>修改配置文件D:\blog_config.yml,没用过.yml文件的可以了解下</h5><p>注意<strong>key: value,冒号后面要有一个空格，不错误然配置文件会解析错误导致hexo g报错，后面的MD文章文件头中，同样需要注意</strong><br><a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML 语言教程</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/k9990009/k9990009.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h5 id="本地测试，hexo-3-0把服务器独立成个别模块，需要单独安装：npm-install-hexo-server-–save"><a href="#本地测试，hexo-3-0把服务器独立成个别模块，需要单独安装：npm-install-hexo-server-–save" class="headerlink" title="本地测试，hexo 3.0把服务器独立成个别模块，需要单独安装：npm install hexo-server –save"></a>本地测试，hexo 3.0把服务器独立成个别模块，需要单独安装：<strong>npm install hexo-server –save</strong></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h5 id="部署至github-先安装插件：npm-install-hexo-deployer-git-–save，第一次部署需要输入用户和密码"><a href="#部署至github-先安装插件：npm-install-hexo-deployer-git-–save，第一次部署需要输入用户和密码" class="headerlink" title="部署至github,先安装插件：npm install hexo-deployer-git –save，第一次部署需要输入用户和密码"></a>部署至github,先安装插件：<strong>npm install hexo-deployer-git –save</strong>，第一次部署需要输入用户和密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署后访问：<strong>http://你的GitHub用户名.github.io</strong>即可</p><h2 id="hexo主题"><a href="#hexo主题" class="headerlink" title="hexo主题"></a>hexo主题</h2><p>去这找你喜欢的主题<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题</a>，使用主题不仅布局美观，而且还集成了其他功能，例如站长统计、评论、网易云音乐等等。后端写前端简直是灾难，换个主题省心省力。点击对应主题的github链接，开发者有详细使用说明的。</p><h2 id="个性域名与启用https"><a href="#个性域名与启用https" class="headerlink" title="个性域名与启用https"></a>个性域名与启用https</h2><p>不用个性域名，GitHub Pages是默认使用https的（你的GitHub用户名.github.io的setting中设置GitHub Pages）。<br>使用个性域名，可使用let’s encrypt免费证书。我这就不写了，给个思路。(其实我没用过)</p><h4 id="2019-03-02更新"><a href="#2019-03-02更新" class="headerlink" title="2019-03-02更新"></a>2019-03-02更新</h4><p><a href="https://www.jianshu.com/p/23b9e095c7c9" target="_blank" rel="noopener">个性域名配置参考，但不能启用https</a><br>好消息！！！现在Github Pages现在也支持个性域名启用https了，按上面可以配置个性域名，但他配置的ip不对。<br><a href="https://blog.github.com/2018-05-01-github-pages-custom-domains-https/" target="_blank" rel="noopener">https配置参考</a><br>A解析ip必须指向下面的ip：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure></p><p>然后在你的博客仓库设置里，把 <strong>Enforce HTTPS </strong>勾上。（<a href="https://www.jianshu.com/p/dca97568955e" target="_blank" rel="noopener">详细参考</a>）不能勾选请等会，如果ip解析没问题，它会给你下发签证，等会就能勾选了。勾选后，https和http的解析可能会有一小段时间失效，等会就好了。</p><h2 id="hexo发表第一篇文章"><a href="#hexo发表第一篇文章" class="headerlink" title="hexo发表第一篇文章"></a>hexo发表第一篇文章</h2><p>在gitbash中，cd 至在你的博客目录,执行以下命令，生成md文件至D:\blog\source_posts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"你的文章"</span></span><br></pre></td></tr></table></figure><p>文章编辑，md文件是使用的MarkDown语法,请参考<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">markdown基本语法</a><br>windows下编辑器推荐<a href="http://www.markdownpad.com/download.html" target="_blank" rel="noopener">MarkdownPad</a>,另外更新推荐Typora</p><h6 id="免费图床推荐"><a href="#免费图床推荐" class="headerlink" title="免费图床推荐"></a>免费图床推荐</h6><p>新浪微博图床,推荐个<a href="https://github.com/suxiaogang/WeiboPicBed" target="_blank" rel="noopener">新浪微博图床chrome插件</a></p><h2 id="创建关于页面"><a href="#创建关于页面" class="headerlink" title="创建关于页面"></a>创建关于页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure><p>修改对应主题配置文件(例如…\themes\landscape_config.yml),增加About：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Categories: /categories</span><br><span class="line">  Tags: /tags</span><br><span class="line">  About: /about</span><br></pre></td></tr></table></figure><p>编辑…\source\about\index.md文件</p><h2 id="指定404页面"><a href="#指定404页面" class="headerlink" title="指定404页面"></a>指定404页面</h2><p>在source目录下直接创建404.html，页面文件头加上如下内容即可禁止hexo g解析。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>我的404页面如下,接入公益404：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">layout: <span class="literal">false</span></span><br><span class="line">---</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;404&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="换电脑更新博客"><a href="#换电脑更新博客" class="headerlink" title="换电脑更新博客"></a>换电脑更新博客</h2><p>这里说下我的做法，整个流程是一样的，只是不执行hexo初始化这步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>将以下文件放入到你新电脑的博客路径(自己创建一个/blog/)下即可</p><ul><li>_config.yml</li><li>package.json</li><li>scaffolds/</li><li>source/</li><li>themes/</li></ul><h2 id="hexo使用指定git账号部署-2019-03-02更新-非必须"><a href="#hexo使用指定git账号部署-2019-03-02更新-非必须" class="headerlink" title="hexo使用指定git账号部署(2019-03-02更新,非必须)"></a>hexo使用指定git账号部署(2019-03-02更新,非必须)</h2><p>大家上班，公司可能会有类似GitLab的私服，有多个git账号怎么办呢？这时候我们就不用全局的git账号了，需要指定git账号部署。查看hexo的issue，我找到了解决方法，在_config.yml里deploy增加name和email,同时删除.deploy_git，重新编译配置git信息即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/k9990009/k9990009.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  name: k9990009</span><br><span class="line">  email: 1509596944@qq.com</span><br></pre></td></tr></table></figure></p><h2 id="博客源文件备份-2019-03-02更新，非必须"><a href="#博客源文件备份-2019-03-02更新，非必须" class="headerlink" title="博客源文件备份(2019-03-02更新，非必须)"></a>博客源文件备份(2019-03-02更新，非必须)</h2><p>现在github支持私有仓库了，直接建个私有仓库，然后在根目录下备份即可。.gitignore内容如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure></p><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p> 第一次写博客，不对的地方请指正。欢迎分享一些实用、快捷的博客使用技巧。一些小细节可能并没有都提及，比如hexo 命令可以附带一些额外参数，需要读者自行查阅官方文档。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;有次看到个开源的播放器，去该作者的博客瞧了下，发现很酷，用的是hexo搭建的，比wordpress轻量，不用安装mysql，可以托管在Git
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
</feed>
